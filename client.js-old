const protobuf = require("protobufjs");
const net = require('net');

(async ()=>{
	let baseRoot = await protobuf.load("lib/base.proto");
	let transportRoot = await protobuf.load("lib/transport.proto");

	let baseMessage = baseRoot.lookupType("baseMessage.message");
	let listGroups = transportRoot.lookupType("transport.listGroups");
	
	let client = net.createConnection(7070) // open socket on 7070
	client.on('connect',()=>{ // on connection do
		let groupMessage = listGroups.create({ // create group message
			groups:[ 
				10
			]
		})
		let groups = listGroups.encode(groupMessage).finish() // encode group message

		let message = baseMessage.create({ //package groups message previously created  
			messageType:1,
			message:groups // "groups" = previously encoded message
		});
		let basemessage = baseMessage.encode(message).finish() //encode encode message previously created 
		client.write(basemessage) // send packaged message to the server
	})
})()




// const aesjs = require('aes-js');

// var key_256 = [73, 57, 15, 96, 2,
// 	96, 30, 48, 62, 69,
// 	47, 68, 38, 75, 78,
// 	97, 85, 42, 70, 3,
// 	66, 87, 71, 26, 43,
// 	62, 86, 31, 63, 59,
// 	63, 12];

		// text = 'Text may be any length you wish, no padding is required.';

		// var textBytes = aesjs.utils.utf8.toBytes(text);
		// var aesCtr = new aesjs.ModeOfOperation.ctr(key_256, new aesjs.Counter(5));
		// var encryptedBytes = aesCtr.encrypt(textBytes);
		// var encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes)
		// console.log("key = " + encryptedHex);